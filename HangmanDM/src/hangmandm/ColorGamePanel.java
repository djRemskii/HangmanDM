/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hangmandm;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.format.DateTimeFormatter;  
import java.time.LocalDateTime;  
import javax.swing.JLabel;
import javax.swing.Timer;
import java.util.Random;
import java.awt.Color;
/**
 *
 * @author saray
 */
public class ColorGamePanel extends javax.swing.JPanel {

    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd  HH:mm:ss");  
    LocalDateTime now = LocalDateTime.now(); 
    
    
    public ColorGamePanel() {
        setBorder(null);
        Timer t = new Timer(1000, updateClockAction);
        t.start();
        initComponents();
        Random random_method = new Random();
        Random random_method2 = new Random();
        randomVessel = random_method.nextInt(colorList.length);
        randomVessel2 = random_method2.nextInt(colorList.length);
        colorL = colorList[randomVessel];
        color = colorList[randomVessel2];
        labelColor();
        colorColor();
        
    }
    
    private void correct()
     {
        //if button == color add 100 points, else do nothing
    }
    private void rounds()
    {
        if (round == 5)
        {
            //end game and go to endColor
        }          
    }
    private void labelColor()
    {
        switch (colorL) {
            case "Red" -> {
               jLabel2.setText("Red");
            }
            case "Yellow" -> {
               jLabel2.setText("Yellow");
            }
            case "Green" -> {
               jLabel2.setText("Green");
            }
             case "Blue" -> {
               jLabel2.setText("Blue");
            }
             case "Purple" -> {
               jLabel2.setText("Purple");
            }
            default -> {
              System.out.println("error");
            }
        }
    }
    
     private void colorColor()
    {
        switch (color) {
            case "Red" -> {
               jLabel2.setForeground(Color.RED);
            }
            case "Yellow" -> {
               jLabel2.setForeground(Color.YELLOW);
            }
            case "Green" -> {
               jLabel2.setForeground(Color.GREEN);
            }
             case "Blue" -> {
               jLabel2.setForeground(Color.BLUE);
            }
             case "Purple" -> {
               jLabel2.setForeground(new java.awt.Color(153, 0, 255));
            }
            default -> {
              System.out.println("error");
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        jLabel2.setText("Color");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(74, 74, 74)
                .addComponent(jLabel2)
                .addContainerGap(154, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
ActionListener updateClockAction = new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            // Assumes clock is a JLabel
            now = LocalDateTime.now();
            jLabel1.setText(dtf.format(now)); 
        }
    };



    private int randomVessel;
    private int randomVessel2;
    private static int score;
    private String colorL;
    private String color;
    private int round;
    private final String [] colorList = {"Red","Yellow","Green","Blue","Purple"};
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
